Four Workshops at the University of Edinburgh

    INTRODUCTION TO PYTHON FOR BIOLOGISTS
    DATE: Monday 12 - Friday 16 December 2016

    INTRODUCTION TO RAD-SEQ DATA ANALYSIS
    DATE: Tuesday 29 - Wednesday 30 November 2016

    INTRODUCTION TO CHIP-SEQ DATA ANALYSIS AND VISUALISATION USING ENSEMBL
    DATE Tuesday 22 - Wednesday 23 November 2016

    OXFORD NANOPORE MINION SEQUENCING - DATA HANDLING, ANALYSIS AND APPLICATIONS
    DATE: Tuesday 1 November 2016

-----

INTRODUCTION TO PYTHON FOR BIOLOGISTS

DATE: Monday 12 - Friday 16 December 2016
VENUE: The King's Buildings, The University of Edinburgh, Edinburgh,
Scotland, UK
REGISTRATION DEADLINE: Monday 28 November 2016 noon
CANCELLATION DEADLINE: Monday 5 December 2016 noon
PLACES: 20 (first come, first served)
REGISTRATION FEE: pounds 500 (includes coffee/tea, but no lunch)
INFORMATION: Bert Overduin (bert.overduin@ed.ac.uk), Martin Jones (
martin@pythonforbiologists.com)

TO REGISTER:
http://genomics.ed.ac.uk/services/introduction-python-biologists

Python is a dynamic, readable language that is a popular platform for all
types of bioinformatics work, from simple one-off scripts to large, complex
software projects. This workshop is aimed at complete beginners and assumes
no prior programming experience. It gives an overview of the language with
an emphasis on practical problem-solving, using examples and exercises
drawn from various aspects of bioinformatics work. The workshop is
structured so that the parts of the language most useful for bioinformatics
are introduced as early as possible, and that students can start writing
plausibly-useful programs after the first few sessions. After completing
the workshop, students should be in a position to (1) apply the skills they
have learned to tackling problems in their own research and (2) continue
their Python education in a self-directed way.

"Great learning from someone with a biology background rather than computer
science - meant we were on the same wavelength." (February 2016)
"Brilliantly well-run. From the book; to the USB stick with all the files
we need; to the topics covered; to the system of helping us one-on-one, I
cannot fault this course." (February 2016)

INSTRUCTORS

Dr. Martin Jones (Founder, Python for Biologists)
Dr. Bert Overduin (Training and Outreach Bioinformatician, Edinburgh
Genomics)

WORKSHOP FORMAT

The workshop is delivered over ten half-day sessions. Each session consists
of roughly a one hour lecture followed by two hours of practical exercises,
with breaks at the organiser's discretion. Each session uses examples and
exercises that build on material from the previous one, so it's important
that students attend all sessions. A description of the sessions can be
found at the bottom of this page.

WHO SHOULD ATTEND

This workshop is aimed at researchers and technical workers with a
background in biology who want to learn programming. The syllabus has been
planned with complete beginners in mind; people with previous programming
experience are welcome to attend as a refresher but may find the pace a bit
slow. If in doubt, take a look at the detailed session content below or
drop Martin Jones or Bert Overduinan email.

REQUIREMENTS

Students should have enough biological/bioinformatics background to
appreciate the examples and exercise problems (i.e. they should know what a
protein accession number, BLAST report, and FASTA sequence is). No previous
programming experience or computer skills (beyond the ability to use a text
editor) are necessary.

SESSION CONTENT

1. Introduction

In this session I introduce the students to Python and explain what we
expect them to get out of it and how learning to program can benefit their
research. I explain the format of the course and take care of any
housekeeping details (like coffee breaks and catering arrangements). I
outline the edit-run-fix cycle of software development and talk about how
to avoid common text editing errors. In this session, we also check that
the computing infrastructure for the rest of the course is in place (e.g.
making sure that everybody has an appropriate version of Python installed).
Core concepts introduced: source code, text editors, whitespace, syntax and
syntax errors, Python versions

2. Manipulating text

In this session students learn to write very simple programs that produce
output to the terminal, and in doing so become comfortable with editing and
running Python code. This session also introduces many of the technical
terms that we'll rely on in future sessions. I run through some examples of
tools for working with text and show how they work in the context of
biological sequence manipulation. We also cover different types of errors
and error messages, and learn how to go about fixing them methodically.
Core concepts introduced: terminals, standard output, variables and naming,
strings and characters, special characters, output formatting, statements,
functions, methods, arguments, comments.

3. Working with files

I introduce this session by talking about the importance of files in
bioinformatics pipelines and workflows, and we then explore the Python
interfaces for reading from and writing to files. This involves introducing
the idea of types and objects, and a bit of discussion about how Python
interacts with the operating system. The practical session is spent
combining the techniques from session 2 with the file IO tools to create
basic file- processing scripts. Core concepts introduced: objects and
classes, paths and folders, relationships between variables and values,
text and binary files, newlines.

4. Lists and loops

A discussion of the limitations of the techniques learned in session 3
quickly reveals that flow control is required to write more sophisticated
file-processing programs, and I introduce the concept of loops. We look at
the way in which Python loops work, and how they can be used in a variety
of contexts. We explore the use of loops and lists together to tackle some
more difficult problems. Core concepts introduced: lists and arrays, blocks
and indentation, variable scoping, iteration and the iteration interface,
ranges.

5. Conditions

I use the idea of decision-making as a way to introduce conditional tests,
and outline the different building-blocks of conditions before showing how
conditions can be combined in an expressive way. We look at the different
ways that we can use conditions to control program flow, and how we can
structure conditions to keep programs readable. Core concepts introduced:
Truth and falsehood, Boolean logic, identity and equality, evaluation of
statements, branching.

6. Writing functions

We discuss functions that we'd like to see in Python before considering how
we can add to our computational toolbox by creating our own. We examine the
nuts and bolts of writing functions before looking at best-practice ways of
making them usable. We also look at a couple of advanced features of Python
- named arguments and defaults. Core concepts introduced: argument passing,
encapsulation, data flow through a program.

7. Regular expressions

I show how a range of common problems in bioinformatics can be described in
terms of pattern matching, and give an overview of Pythons regex tools. We
look at the building blocks of regular expressions themselves, and learn
how they are a general solution to the problem of describing patterns in
strings, before practising writing some specific examples of regular
expressions. Core concepts introduced: domain-specific languages, modules
and namespaces.

8. Dictionaries

We discuss a few examples of key-value data and see how the problem of
storing them is a common one across bioinformatics and programming in
general. We learn about the syntax for dictionary creation and manipulation
before talking about the situations in which dictionaries are a better fit
that the data structures we have learned about thus far. Core concepts
introduced: paired data types, hashing, key uniqueness, argument unpacking
and tuples.

9. Working with the filesystem

We discuss the role of Python in the context of a bioinformatics workflow,
and how it is often used as a language to "glue" various other components
together. We then look at the Python tools for carrying out file and
directory manipulation, and for running external programs - two tasks that
are often necessary in order to integrate our own programs with existing
ones. Core concepts introduced: processes and subprocesses, the shell and
shell utilities, program return values.

10. BioPython

I discuss the benefits of having frequently-used code packaged into a
library and give a quick overview of the BioPython project. We look at how
BioPython can be used for sequence manipulation, and contrast the resulting
code with our examples from previous sessions, showing the benefits of
each. We see how we can use BioPython to do a job - GenBank file parsing -
that would require a huge amount of coding if we were to write a program
from scratch. Students carry out some exercises involving sequence object
manipulation and explore the parts of the BioPython hierarchy relevant to
their interests. Core concepts introduced: object hierarchies, packages.

--
Bert Overduin, PhD
TRAINING AND OUTREACH BIOINFORMATICIAN
Bert.Overduin@ed.ac.uk
orcid.org/0000-0002-5281-8838

EDINBURGH GENOMICS
The University of Edinburgh
Ashworth Laboratories
The King's Buildings
Charlotte Auerbach Road
Edinburgh EH9 3FL
Scotland, United Kingdom

tel. +44(0)1316507403
http://genomics.ed.ac.uk

-----

INTRODUCTION TO RAD-SEQ DATA ANALYSIS

DATE: Tuesday 29 - Wednesday 30 November 2016
VENUE: The King's Buildings, The University of Edinburgh, Edinburgh,
Scotland, UK
APPLICATION DEADLINE: Tuesday 1 November 2016 noon
CANCELLATION DEADLINE: Tuesday 22 November 2016 noon
PLACES: 12 (selection of applicants)
REGISTRATION FEE: pounds 375 (includes coffee/tea, but no lunch)
INFORMATION: Bert Overduin (bert.overduin@ed.ac.uk)

TO APPLY:
http://genomics.ed.ac.uk/services/introduction-rad-seq-data-analysis

RAD (Restriction site Associated DNA) Sequencing is a method for sampling
the genomes of multiple individuals in a population using next generation
DNA sequencing. The principal advantage of RAD-seq is the ability to
simultaneously examine tens of thousands of genetic loci with vastly
reduced sequencing costs versus whole genome approaches. RAD-seq can be
used on crosses of any design as well as wild populations and organisms
with and without a reference genome. Applications include SNP discovery,
linkage mapping and QTL mapping, but also more complex analyses such as
population genomic and phylogeographic studies. The aim of this workshop is
to familiarise researchers with RAD-seq data and to initiate them in the
analysis by providing lectures and practicals on analysis methodologies. In
the practicals Illumina-generated sequencing data and various widely used
software programs (e.g. FastQC, BWA, samtools, IGV, Stacks) will be used.
In the last section of this workshop we will focus on linkage analysis and
population genomics.

"I feel well prepared to begin analysing my RAD-seq data now." (October
2015)

INSTRUCTORS

Dr. John Davey (Bioinformatician, University of York)
Dr. Judith Risse (Bioinformatician, Wageningen University, The Netherlands)

WORKSHOP FORMAT

The workshop consists of presentations and hands-on tutorials.

WHO SHOULD ATTEND

Graduates, postgraduates, and PIs, who are using or planning to use RAD-seq
technology in their research, and want to learn how to process and analyse
RAD-seq data.

REQUIREMENTS

A general understanding of molecular biology and genomics, and elementary
skills in computer usage are required.

COVERED TOPICS

Introduction to RAD-seq
Introduction to Linux and R
Quality control and demultiplexing of RAD data
Aligning RAD data to a reference
Assembling RAD data de novo
Variant calling
Visualising results
Linkage analysis
Population genomics

-- 
Bert Overduin, PhD
TRAINING AND OUTREACH BIOINFORMATICIAN
Bert.Overduin@ed.ac.uk
orcid.org/0000-0002-5281-8838

EDINBURGH GENOMICS
The University of Edinburgh
Ashworth Laboratories
The King's Buildings
Charlotte Auerbach Road
Edinburgh EH9 3FL
Scotland, United Kingdom

tel. +44(0)1316507403
http://genomics.ed.ac.uk

-----

INTRODUCTION TO CHIP-SEQ DATA ANALYSIS AND VISUALISATION USING ENSEMBL

DATE Tuesday 22 - Wednesday 23 November 2016
VENUE: The King's Buildings, The University of Edinburgh, Edinburgh,
Scotland, UK
APPLICATION DEADLINE: Tuesday 25 October 2016 noon
CANCELLATION DEADLINE: Tuesday 15 November 2016 noon
PLACES: 12 (selection of applicants)
REGISTRATION FEE: pounds 310 (includes coffee/tea, and lunch)
INFORMATION: Bert Overduin (bert.overduin@ed.ac.uk)

TO APPLY:
http://genomics.ed.ac.uk/services/introduction-chip-seq-data-analysis-and-visualisation-using-ensembl

ChIP-seq (Chromatin ImmunoPrecipitation followed by Sequencing) is a
popular high-throughput sequencing assay to identify binding sites of
DNA-associated proteins and histone modifications. Determining how proteins
interact with DNA and the epigenetic landscape is essential for elucidating
the regulation of gene expression. The aim of this workshop is to
familiarise the participants with the primary analysis of ChIP-seq data
sets by providing a balanced set of lectures and practicals on analysis
methodologies. Practicals include publicly available ChIP-seq datasets,
processed using widely used and open-source software programs (e.g. FASTQC,
BWA, samtools, bedtools, wiggletools, MACS2, MEME, TOMTOM, ngsplot) and
visualised on the Ensembl genome browser.

"Very well presented and the presenters were so knowledgeable and helpful."
(July 2015)

INTRUCTORS:

Dr. Myrto Kostadima (Ensembl Regulation Project Leader, European
Bioinformatics Institute, Hinxton, Cambridge, UK)
Dr. Ben Moore (Ensembl Outreach Officer, European Bioinformatics Institute,
Hinxton, Cambridge, UK)

* This workshop is made possible by the free of charge contribution of the
Ensembl team *

WORKSHOP FORMAT

The workshop consists of presentations, demos and hands-on tutorials.

WHO SHOULD ATTEND

Graduates, postgraduates, and PIs, who are using, or planning to use,
ChIP-seq technology in their research and want to learn how to process and
analyse ChIP-seq data.

REQUIREMENTS

A general understanding of molecular biology and genomics, and elementary
skills in computer usage are required.

COVERED TOPICS

High-throughput sequencing technology
Considerations on experiment design for ChIP-seq
Quality control of raw reads: FASTQC and fastx toolkit
Read alignment to a reference genome: BWA
File format conversion and processing: samtools and wiggletools
Peak calling: MACS2
Motif analysis: MEME
IDR analysis
Genome browser visualisation and trackhub generation: Ensembl

-- 
Bert Overduin, PhD
TRAINING AND OUTREACH BIOINFORMATICIAN
Bert.Overduin@ed.ac.uk
orcid.org/0000-0002-5281-8838

EDINBURGH GENOMICS
The University of Edinburgh
Ashworth Laboratories
The King's Buildings
Charlotte Auerbach Road
Edinburgh EH9 3FL
Scotland, United Kingdom

tel. +44(0)1316507403
http://genomics.ed.ac.uk

-----

OXFORD NANOPORE MINION SEQUENCING - DATA HANDLING, ANALYSIS AND APPLICATIONS

DATE: Tuesday 1 November 2016
VENUE: The King's Buildings, The University of Edinburgh, Edinburgh,
Scotland, UK
APPLICATION DEADLINE: Tuesday 4 October 2016 noon
CANCELLATION DEADLINE: Tuesday 25 October 2016 noon
PLACES: 12 (selection of applicants)
REGISTRATION FEE: pounds 175 (includes coffee/tea, and lunch)
INFORMATION: Bert Overduin (bert.overduin@ed.ac.uk)

TO APPLY:
http://genomics.ed.ac.uk/services/oxford-nanopore-minion-sequencing-data-handling-analysis-and-applications

Nanopore sequencing is one of the newest sequence technologies, in which
single DNA molecules are sequenced directly, without the need for an
intervening PCR amplification step or a chemical labelling step. It offers
the potential of read lengths of tens of kilobases. The Oxford Nanopore
MinION is a portable sequencing device that already has proven its power in
e.g. the rapid identification of viral pathogens, the monitoring of ebola,
genome assembly improvement, and environmental and food safety monitoring.
As a member of the pre-release MinION Access Programme (MAP), Edinburgh
Genomics has considerable experience in both generating and analyzing
MinION sequence data, and also has published one of the first software
tools to visualize and analyze these data (M Watson et al. poRe: an R
package for the visualization and analysis of nanopore sequencing data.
Bioinformatics. 2015 Jan 1;31(1):114-5).

"I liked this course - it's a good, well-rounded primer for this subject
area." (January 2016)

INSTRUCTORS

Dr. Judith Risse (Bioinformatician, Wageningen University, The Netherlands)
Dr. Rob Stewart (Bioinformatician, The Roslin Institute)

WORKSHOP FORMAT

The workshop consists of presentations, demos and hands-on tutorials. In
the hands-on tutorials a wide range of software programs will be used, some
of which were especially developed for the MinION.

WHO SHOULD ATTEND

Graduates, postgraduates, or PIs, who are working with, or are planning to
work with, Oxford Nanopore MinION sequence data.

REQUIREMENTS

Basic knowledge of Linux is absolutely essential, while some familiarity
with R would be advantageous.

COVERED TOPICS

Introduction to the Oxford Nanopore MinION sequencing technology
Review of software
Base calling and live statistics
Browsing file content
Extraction of FASTQ/A data
Extraction and analysis of events data
Gathering and visualization of run statistics, and quality control
Other base callers
Alignment, visualisation, and quality control of reads
Event alignment
Hairpin analysis
Review of applications
Scaffolding of short reads
Hybrid de novo assembly

COVERED SOFTWARE

BWA, Canu, count_errors.py, DeepNano, GraphMap, HDF5 Command-line Tools,
HDFView, Metrichor, LAST, LINKS, miniasm, minimap, minoTour, MUMmer,
Nanocall, Nanocorr, nanopolish, poRe, pore tools, R, QUAST, SAMtools,
SPAdes, SSPACE-LongRead

-- 
Bert Overduin, PhD
TRAINING AND OUTREACH BIOINFORMATICIAN
Bert.Overduin@ed.ac.uk
orcid.org/0000-0002-5281-8838

EDINBURGH GENOMICS
The University of Edinburgh
Ashworth Laboratories
The King's Buildings
Charlotte Auerbach Road
Edinburgh EH9 3FL
Scotland, United Kingdom

tel. +44(0)1316507403
http://genomics.ed.ac.uk

Bert Overduin <Bert.Overduin@ed.ac.uk>

